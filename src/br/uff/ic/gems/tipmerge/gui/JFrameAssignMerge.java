/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.uff.ic.gems.tipmerge.gui;

import br.uff.ic.gems.tipmerge.model.EditedFile;
import br.uff.ic.gems.tipmerge.model.Medalist;
import br.uff.ic.gems.tipmerge.model.MergeFiles;
import br.uff.ic.gems.tipmerge.model.RankingGenerator;
import br.uff.ic.gems.tipmerge.model.Repository;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author j2cf
 */
public class JFrameAssignMerge extends javax.swing.JFrame {
    private JTable jTableRanking = new JTable();

	/**
	 * Creates new form JFrameAssignMerge
	 */
	public JFrameAssignMerge() {
		initComponents();
	}
        public JFrameAssignMerge(Repository repository) {
                  initComponents();
        }
	public JFrameAssignMerge(MergeFiles mergeFiles,Map<EditedFile,Set<EditedFile>> dependenciesBranchOne,Map<EditedFile,Set<EditedFile>> dependenciesBranchTwo) {
            		initComponents();
                 System.out.println("Medals for common files");
                 RankingGenerator rGenerator = new RankingGenerator();
                 Set<EditedFile> excepiontFiles = rGenerator.setMedalsFilesEditedBothBranches(mergeFiles);
		System.out.println("Medals for dependencies in branch 1");
		excepiontFiles = rGenerator.setMedalFromDependencies(dependenciesBranchOne, mergeFiles, excepiontFiles);
		System.out.println("Medals for dependencies in branch 2");
		excepiontFiles = rGenerator.setMedalFromDependencies(dependenciesBranchTwo, mergeFiles, excepiontFiles);
		excepiontFiles.removeAll(excepiontFiles);
		List<Medalist> ranking = rGenerator.getRanking();
		showRanking(ranking);
		//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTop = new javax.swing.JPanel();
        jButtonRun = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelBody = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Developer Assignments");

        jPanelTop.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonRun.setText("Run");
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanelTopLayout = new javax.swing.GroupLayout(jPanelTop);
        jPanelTop.setLayout(jPanelTopLayout);
        jPanelTopLayout.setHorizontalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap(398, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addContainerGap())
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTopLayout.setVerticalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addContainerGap())
        );

        jPanelBody.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelBodyLayout = new javax.swing.GroupLayout(jPanelBody);
        jPanelBody.setLayout(jPanelBodyLayout);
        jPanelBodyLayout.setHorizontalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanelBodyLayout.setVerticalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
       
		
    }//GEN-LAST:event_jButtonRunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelBody;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
   private void showRanking(List<Medalist> ranking) {
		DefaultTableModel model = new DefaultTableModel();
		Icon mGold = new ImageIcon(getClass().getResource("/br/uff/ic/gems/tipmerge/icons/gold1.png"));
		Icon mSilver = new ImageIcon(getClass().getResource("/br/uff/ic/gems/tipmerge/icons/silver1.png"));
		Icon mBronze = new ImageIcon(getClass().getResource("/br/uff/ic/gems/tipmerge/icons/bronze1.png"));
		JLabel lblGold = new JLabel("Gold");
		JLabel lblSilver = new JLabel("Silver");
		JLabel lblBronze = new JLabel("Bronze");
		lblGold.setIcon(mGold);
		lblSilver.setIcon(mSilver);
		lblBronze.setIcon(mBronze);
		String[] columnLabels = {"Ranking", "Committer", "Gold", "Silver", "Bronze", "Total"};
		model.setColumnIdentifiers(columnLabels);
		int rank = 1;
		for(Medalist m : ranking){
			int gold = m.getGoldMedals();
			int silver = m.getSilverMedals();
			int bronze = m.getBronzeMedals();
			int total = gold + silver + bronze;
			String name = m.getCommitter().getName();
			model.addRow(new Object[]{rank++ + "ยบ", name, gold, silver, bronze, total});
		}
		jTableRanking.setModel(model);
		JTableRenderer jTableRender = new JTableRenderer();
		jTableRanking.getColumnModel().getColumn(2).setHeaderValue(lblGold);
		jTableRanking.getColumnModel().getColumn(2).setHeaderRenderer(jTableRender);
		jTableRanking.getColumnModel().getColumn(3).setHeaderValue(lblSilver);
		jTableRanking.getColumnModel().getColumn(3).setHeaderRenderer(jTableRender);
		jTableRanking.getColumnModel().getColumn(4).setHeaderValue(lblBronze);
		jTableRanking.getColumnModel().getColumn(4).setHeaderRenderer(jTableRender);
		jTableRanking.setDefaultRenderer(Object.class,new JTableRenderer());
                jScrollPane1.setViewportView(jTableRanking);
	}

}
