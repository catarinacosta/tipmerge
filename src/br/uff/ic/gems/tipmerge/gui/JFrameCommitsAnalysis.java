/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.uff.ic.gems.tipmerge.gui;

import br.uff.ic.gems.tipmerge.dao.MergeDao;
import br.uff.ic.gems.tipmerge.model.Conciliator;
import br.uff.ic.gems.tipmerge.model.Merge;
import br.uff.ic.gems.tipmerge.model.Repository;
import br.uff.ic.gems.tipmerge.util.RunGit;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author j2cf
 */
public class JFrameCommitsAnalysis extends javax.swing.JFrame {
	
	private Repository repo;

	/**
	 * Creates new form JFrameCommitsAnalysis
	 */
	public JFrameCommitsAnalysis(Repository repository) {
		this.repo = repository;
		initComponents();
		setParameters();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableResult = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btRun = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbBranchTwo = new javax.swing.JComboBox();
        cbBranchOne = new javax.swing.JComboBox();
        hash1 = new javax.swing.JLabel();
        hash2 = new javax.swing.JLabel();
        txRepoName = new javax.swing.JLabel();
        barRuning = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Commits Analysis");

        tableResult.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        tableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Developers", "Branch 1", "Branch 2", "Intersection", "All History"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableResult);

        jButton1.setText("Export");
        jButton1.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));

        btRun.setText("Run");
        btRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRunActionPerformed(evt);
            }
        });

        jLabel8.setText("Branch two's hash");

        jLabel7.setText("Branch one's hash");

        cbBranchTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBranchTwoActionPerformed(evt);
            }
        });

        cbBranchOne.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBranchOneItemStateChanged(evt);
            }
        });
        cbBranchOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBranchOneActionPerformed(evt);
            }
        });

        hash1.setText("<hash>");

        hash2.setText("<hash>");

        txRepoName.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        txRepoName.setText("repo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btRun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(148, 148, 148)
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txRepoName)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(cbBranchOne, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(hash1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(50, 50, 50)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(hash2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbBranchTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txRepoName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBranchTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBranchOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hash1)
                    .addComponent(hash2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btRun))
        );

        barRuning.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(barRuning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barRuning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbBranchOneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBranchOneItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBranchOneItemStateChanged

    private void cbBranchOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBranchOneActionPerformed
        // TODO add your handling code here:
		hash1.setText(RunGit.getResult("git log -n 1 --pretty=format:%h " + cbBranchOne.getSelectedItem().toString(), repo.getProject()));
    }//GEN-LAST:event_cbBranchOneActionPerformed

    private void cbBranchTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBranchTwoActionPerformed
		hash2.setText(RunGit.getResult("git log -n 1 --pretty=format:%h " + cbBranchTwo.getSelectedItem().toString(), repo.getProject()));

    }//GEN-LAST:event_cbBranchTwoActionPerformed

    private void btRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRunActionPerformed
		int i = this.repo.getMerges().size();
		float j = (float) (i/100.0);

		barRuning.setValue(0);
		barRuning.setMaximum(100);
		
		//barRuning.getValue()*100)/barRuning.getMaximum()

		DefaultTableModel model =  (DefaultTableModel)tableResult.getModel();
		int count = 0;
		for(Merge merge : this.repo.getMerges()){
		
//		}
//		this.repo.getMerges().stream().forEach((merge) -> {
			MergeDao mergeDao = new MergeDao(repo.getProject());
			mergeDao.update(merge);
			if (merge.isMergeOfBranches()){
				int cmtb1 = 0, cmtb2 = 0, cmtH = 0, cmtrs = 0; 
				merge.getCmtBeforeMerge();
				model.insertRow(model.getRowCount(), new Object[] {"Merge Branch: ", merge.getHash(), "", "", ""});
				for (Conciliator conciliator : merge.getConciliators()){
					cmtrs++; 
					cmtb1 += conciliator.getCommitsBranch1();
					cmtb2 += conciliator.getCommitsBranch2();
					cmtH += conciliator.getCommitsHistory();
					model.insertRow(model.getRowCount(), 
									new Object[] {conciliator.getCommitter().getName() + ":" + conciliator.getCommitter().getEmail(), 
													conciliator.getCommitsBranch1(), 
													conciliator.getCommitsBranch2(), 
													conciliator.getCommitsBoothBranchs(), 
													conciliator.getCommitsHistory()}
					);
				}
				model.insertRow(model.getRowCount(), new Object[] {"Total of " + cmtrs + " authors", cmtb1, cmtb2, "", cmtH});
				model.insertRow(model.getRowCount(), new Object[] {"", "", "", "", ""});
			}
			count++;
			if(count%j < 1.0){
				updateBar();
			}
		}
		
		tableResult.update(tableResult.getGraphics());
		
		/*
		for(MergeBranches merge : merges){

			project.setMergeDetails(merge);

			if (merge.isMergeOfBranches()){
				output.append("Merge ").append(i--).append(": ").append(merge.getCommitHash()).append(" ( ").append(merge.getAuthorsBranchOne().size()).append(" , ").append(merge.getAuthorsBranchTwo().size()).append(" )\n");
				if(merge.getAuthorsBranchOne() != null){
					output.append("\tBranch One: ");
					for(CommitAuthor author : merge.getAuthorsBranchOne())
						output.append(author.getName()).append(" (").append(author.getCommits()).append(")\t");
				}
				output.append("\n");
				if(merge.getAuthorsBranchTwo() != null){
					output.append("\tBranch Two: ");
					for(CommitAuthor author : merge.getAuthorsBranchTwo())
						output.append(author.getName()).append(" (").append(author.getCommits()).append(")\t");
				}
				output.append("\n");
				if(merge.getAuthorsInCommon() != null){
					output.append("\tCommon: ").append(merge.getAuthorsInCommon().toString());
				}
				output.append("\n");
				j++;
			} 
		}*/
		
    }//GEN-LAST:event_btRunActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barRuning;
    private javax.swing.JButton btRun;
    private javax.swing.JComboBox cbBranchOne;
    private javax.swing.JComboBox cbBranchTwo;
    private javax.swing.JLabel hash1;
    private javax.swing.JLabel hash2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableResult;
    private javax.swing.JLabel txRepoName;
    // End of variables declaration//GEN-END:variables

	private void setParameters() {
		txRepoName.setText("Project " +  repo.getName());
		cbBranchOne.setModel(new JComboBox(repo.getBranches().toArray()).getModel());
		cbBranchTwo.setModel(new JComboBox(repo.getBranches().toArray()).getModel());
	}

	private void updateBar() {
		int max = barRuning.getMaximum();
		barRuning.setValue(barRuning.getValue() + 1);
		barRuning.setString(barRuning.getValue() + "% Done");
		barRuning.update(barRuning.getGraphics());
	
	}
}
